[package]
name = "shu"
version = "0.8.3"
edition = "2021"
license = "MIT OR Apache-2.0"
description = "High-dimensional metabolic maps."
categories = ["visualization", "science"]
repository = "https://github.com/biosustain/shu"
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bevy = {version="0.13", features = ["multi-threaded", "bevy_render", "bevy_core_pipeline", "bevy_asset", "bevy_sprite", "bevy_winit", "png", "x11", "bevy_ui", "tga", "bmp", "jpeg", "webgl2"], default-features=false }
bevy_egui = "0.25"
bevy_pancam = { version = "0.11.0", features = ["bevy_egui"] }
bevy_prototype_lyon = "0.11.0"
colorgrad = "0.6.2"
itertools = "0.12.1"
fastrand = "2.0.1"
serde = "1.0.197"
serde_json = "1.0.114"
proc-macro2 = "1.0.76"
chrono = "0.4.35"
roarsvg = "0.4.1"
anyhow = "1.0.80"
image = "0.24.9"

# dependencies exclusive for wasm32
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version = "0.2.92", features = ["serde", "serde-serialize"] }
console_error_panic_hook = "0.1"
wasm-bindgen-futures = "0.4.33"
async-std = "1.12.0"

[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3.4"
features = [
  'CanvasRenderingContext2d',
  'CssStyleDeclaration',
  'Document',
  'Element',
  'EventTarget',
	'File',
	'FileList',
  'HtmlLabelElement',
  'HtmlInputElement',
  'HtmlElement',
  'MouseEvent',
  'Node',
  'Window',
  'console',
]

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

[profile.wasm-release]
# Use release profile as default values
inherits = "release"

# Optimize with size in mind, also try "s", sometimes it is better.
# This doesn't increase compilation times compared to -O3, great improvements
opt-level = "z"

# Do a second optimization pass removing duplicate or unused code from dependencies.
# Slows compile times, marginal improvements
lto = "fat"

# When building crates, optimize larger chunks at a time
# Slows compile times, marginal improvements
codegen-units = 1

